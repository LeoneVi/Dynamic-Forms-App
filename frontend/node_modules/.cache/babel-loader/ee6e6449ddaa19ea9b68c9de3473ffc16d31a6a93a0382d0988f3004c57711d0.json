{"ast":null,"code":"var _jsxFileName = \"/Users/Tory/Desktop/myApp/frontend/src/Pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) {\n      navigate(\"/login\"); // Redirect if no user logged in\n    } else {\n      // Fetch posts for the logged-in user\n      axios.get(`http://localhost:4000/posts?userId=${userId}`).then(res => {\n        setPosts(res.data);\n      }).catch(err => console.error(err));\n    }\n  }, [navigate]);\n  const handleEdit = postId => {\n    navigate(`/edit/${postId}`); // Navigate to edit page for the post\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(post._id),\n          style: {\n            display: \"block\",\n            margin: \"10px 0\"\n          },\n          children: post.title\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"wlX5Q2vHIOaliHXiQZ2fNKb4Q3U=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","axios","jsxDEV","_jsxDEV","Dashboard","_s","posts","setPosts","navigate","userId","localStorage","getItem","get","then","res","data","catch","err","console","error","handleEdit","postId","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","onClick","_id","style","display","margin","title","_c","$RefreshReg$"],"sources":["/Users/Tory/Desktop/myApp/frontend/src/Pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Dashboard() {\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n\n    if (!userId) {\n      navigate(\"/login\"); // Redirect if no user logged in\n    } else {\n      // Fetch posts for the logged-in user\n      axios\n        .get(`http://localhost:4000/posts?userId=${userId}`)\n        .then((res) => {\n          setPosts(res.data);\n        })\n        .catch((err) => console.error(err));\n    }\n  }, [navigate]);\n\n  const handleEdit = (postId) => {\n    navigate(`/edit/${postId}`); // Navigate to edit page for the post\n  };\n\n  return (\n    <div>\n      <center>\n        <h2>Dashboard</h2>\n        <div>\n          {posts.length > 0 ? (\n            posts.map((post) => (\n              <button\n                key={post._id}\n                onClick={() => handleEdit(post._id)}\n                style={{ display: \"block\", margin: \"10px 0\" }}\n              >\n                {post.title}\n              </button>\n            ))\n          ) : (\n            <p>No posts available.</p>\n          )}\n        </div>\n      </center>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,IAAI,CAACF,MAAM,EAAE;MACXD,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACL;MACAP,KAAK,CACFW,GAAG,CAAC,sCAAsCH,MAAM,EAAE,CAAC,CACnDI,IAAI,CAAEC,GAAG,IAAK;QACbP,QAAQ,CAACO,GAAG,CAACC,IAAI,CAAC;MACpB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMY,UAAU,GAAIC,MAAM,IAAK;IAC7Bb,QAAQ,CAAC,SAASa,MAAM,EAAE,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBvB,OAAA;QAAAmB,QAAA,EACGhB,KAAK,CAACqB,MAAM,GAAG,CAAC,GACfrB,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACb1B,OAAA;UAEE2B,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACS,IAAI,CAACE,GAAG,CAAE;UACpCC,KAAK,EAAE;YAAEC,OAAO,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAS,CAAE;UAAAZ,QAAA,EAE7CO,IAAI,CAACM;QAAK,GAJNN,IAAI,CAACE,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKP,CACT,CAAC,gBAEFvB,OAAA;UAAAmB,QAAA,EAAG;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC1B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CA9CuBD,SAAS;EAAA,QAEdL,WAAW;AAAA;AAAAqC,EAAA,GAFNhC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}